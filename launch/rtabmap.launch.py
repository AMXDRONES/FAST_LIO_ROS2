import os.path

from ament_index_python.packages import get_package_share_directory

from launch import LaunchDescription
from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument
from launch.substitutions import LaunchConfiguration
from launch.launch_description_sources import PythonLaunchDescriptionSource


def generate_launch_description():
    config_rviz = os.path.join(
        get_package_share_directory(
            'rtabmap_ros'), 'launch', 'config', 'rgbd.rviz'
    )

    rtabmapviz = LaunchConfiguration('rtabmapviz')
    rviz = LaunchConfiguration('rviz')
    use_sim_time = LaunchConfiguration('use_sim_time')
    cloud_topic = LaunchConfiguration('scan_cloud_topic')
    database_path = LaunchConfiguration('database_path')

    declare_rtabmapviz = DeclareLaunchArgument('rtabmapviz', default_value='true',
                                               description='Launch RTAB-Map UI (optional).')
    declare_rviz = DeclareLaunchArgument('rviz', default_value='false',
                                         description='Launch RVIZ (optional).')
    declare_use_sim_time = DeclareLaunchArgument('use_sim_time', default_value='false',
                                                 description='Use simulation (Gazebo) clock if true')
    declare_cfg = DeclareLaunchArgument('cfg',      default_value='',
                                        description='To change RTAB-Map\'s parameters, set the path of config file (*.ini) generated by the standalone app.')
    declare_gui_cfg = DeclareLaunchArgument('gui_cfg',  default_value='~/.ros/rtabmap_gui.ini',
                                            description='Configuration path of rtabmapviz.')
    declare_rviz_cfg = DeclareLaunchArgument('rviz_cfg', default_value=config_rviz,
                                             description='Configuration path of rviz2.')
    declare_database_path = DeclareLaunchArgument('database_path', default_value='~/.ros/rtabmap.db',
                                                  description='Where is the map saved/loaded.')
    declare_cloud_topic = DeclareLaunchArgument(
        'scan_cloud_topic', default_value='/livox/lidar')

    rtabmap_launch = IncludeLaunchDescription(
        PythonLaunchDescriptionSource(
            os.path.join(get_package_share_directory(
                'rtabmap_ros'), 'launch', 'rtabmap.launch.py'),
        ),
        launch_arguments={
            'use_sim_time': use_sim_time,
            'rtabmapviz': rtabmapviz,
            'rviz': rviz,
            'frame_id': 'body',
            'odom_frame_id': 'camera_init',
            'map_frame_id': 'map',
            'subscribe_scan_cloud': 'true',
            'scan_cloud_topic': cloud_topic,
            'database_path': database_path
        }.items()
    )

    ld = LaunchDescription()
    ld.add_action(declare_rtabmapviz)
    ld.add_action(declare_rviz)
    ld.add_action(declare_use_sim_time)
    ld.add_action(declare_cfg)
    ld.add_action(declare_gui_cfg)
    ld.add_action(declare_rviz_cfg)
    ld.add_action(declare_database_path)
    ld.add_action(declare_cloud_topic)

    ld.add_action(rtabmap_launch)

    return ld
